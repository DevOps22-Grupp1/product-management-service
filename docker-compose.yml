version: "3"
name: "scamazon"

networks:
  my_network:
    driver: bridge

volumes:
  mongo-data:


services:
  user-management-service:
    build: ./backend
    networks:
      - my_network
    ports:
      - "5005:5002"
    depends_on:
      mongo-user-management-service:
        condition: service_healthy

  prometheus-user-management-service:
    image: prom/prometheus:latest
    ports:
      - "9099:9090"
    networks:
      - my_network
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yaml

  mongo-user-management-service:
    image: mongo
    restart: always
    networks:
      - my_network
    volumes:
      - ./mongo-data:/data/db
      - ./init/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    healthcheck:
      test: echo 'mongo.runCommand("ping").ok' | mongosh mongo-user-management-service:27017 --quiet
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 40s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: testdb

  mongo-express-user-management-service:
    image: mongo-express
    restart: always
    ports:
      - 8087:8081
    networks:
      - my_network
    depends_on:
      mongo-user-management-service:
        condition: service_healthy
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo-user-management-service:27017/
